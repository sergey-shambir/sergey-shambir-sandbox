#ifndef PYTHON_EDITOR__INDENTER__INCLUDED
#define PYTHON_EDITOR__INDENTER__INCLUDED

/**
  CIndenter отвечает за расстановку отступов в исходном коде на €зыке Python
  */

#include <texteditor/indenter.h>

namespace PythonEditor {

class Indenter : public TextEditor::Indenter
{
public:
    Indenter();
    virtual ~Indenter();

    /**
      ¬ызывает ли символ увеличение уровн€ отступа? (как "{" в €зыке C++)
      */
    virtual bool isElectricCharacter(const QChar &ch) const;

    /**
      ¬ыравнивание блока кода. ѕод блоком обычно подразумеваетс€ одна строка.
      */
    virtual void indentBlock(QTextDocument *doc,
                             const QTextBlock &block,
                             const QChar &typedChar,
                             const TextEditor::TabSettings &tabSettings);

private:
    bool isElectricLine(const QString &ch) const;
};

}
// PythonEditor

#endif // PYTHON_EDITOR__INDENTER__INCLUDED
